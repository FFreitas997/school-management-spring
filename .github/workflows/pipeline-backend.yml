name: School Management Spring Pipeline

on:
  pull_request:
    branches: [release]

jobs:

  run-compile:
    name: Compile project
    runs-on: ubuntu-latest
    steps:
        - name: Checkout code
          uses: actions/checkout@v4
          with:
            ref: ${{ github.event.pull_request.head.sha }}  # to check out the actual pull request commit, not the merge commit
            fetch-depth: 0  # a full history is required for pull request analysis

        - name: Setup JDK
          uses: actions/setup-java@v4
          with:
            distribution: 'corretto'
            java-version: 21

        - name: Compile project
          run: ./mvnw clean compile

  run-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}  # to check out the actual pull request commit, not the merge commit
          fetch-depth: 0  # a full history is required for pull request analysis

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: 21

      - name: Run Tests
        run: ./mvnw clean test

  build:
    name: Build project
    runs-on: ubuntu-latest
    needs: [run-compile, run-tests]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}  # to check out the actual pull request commit, not the merge commit
          fetch-depth: 0  # a full history is required for pull request analysis

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: 21

      - name: Build project
        run: ./mvnw clean package

  build-image:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}  # to check out the actual pull request commit, not the merge commit
          fetch-depth: 0  # a full history is required for pull request analysis

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: 21

      - name: Build project
        run: ./mvnw clean package

      - name: Extract project version
        id: extract_version
        run: echo "VERSION=$(./mvnw -q -Dexec.executable='echo' -Dexec.args='${project.version}' --non-recursive exec:exec)" >> $GITHUB_OUTPUT

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          push: true
          platforms: linux/amd64
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/school-management-spring:${{ steps.extract_version.outputs.VERSION }}
          build-args: |
            PROFILE=prod
            APP_VERSION=${{ steps.extract_version.outputs.VERSION }}






# Deployment to VPS using SSH and SCP commands
#
#   deploy:
#    name: Deploy Backend
#    runs-on: self-hosted
#    needs: [build-image]
#    steps:
#
#      - name: Create deployment folder
#        run: ssh ${{ secrets.VPS_USERNAME }}@${{ secrets.VPS_IP }} "mkdir -p ci-cd"
#
#      - name: Copy docker-compose file
#        run: scp -oStrictHostKeyChecking=no docker-compose.yml ${{ secrets.VPS_USERNAME }}@${{ secrets.VPS_IP }}:ci-cd/docker-compose.yml
#
#      - name: Set ENV variable and deploy
#        run: |
#          ssh ${{ secrets.VPS_USERNAME }}@${{ secrets.VPS_IP }} <<EOF
#          export JWT_SECRET=${{ secrets.JWT_SECRET }}
#          export ADMIN_EMAIL=${{ secrets.ADMIN_EMAIL }}
#          export ADMIN_PASSWORD=${{ secrets.ADMIN_PASSWORD }}
#          export MAIL_USERNAME=${{ secrets.MAIL_USERNAME }}
#          export MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}
#          export POSTGRES_USERNAME=${{ secrets.POSTGRES_USERNAME }}
#          export POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
#          export POSTGRES_URL=${{ secrets.POSTGRES_URL }}
#          cd ci-cd
#          docker compose -f docker-compose.yml pull -q
#          docker compose -f docker-compose.yml up -d
#          EOF